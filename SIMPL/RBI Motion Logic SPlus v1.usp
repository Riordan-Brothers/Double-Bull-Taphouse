/*
Dealer Name: Riordan Brothers
Programmer: Hope Roth
Comments:
*/


#SYMBOL_NAME "RBI Motion Logic SPlus v1"
#CATEGORY "32" // Miscellaneous


#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

DIGITAL_INPUT sensorIn, motionEnable, motionDisable, forceOccupancy, forceVacancy;
ANALOG_INPUT timeoutSeconds, timeoutTenths;  

DIGITAL_OUTPUT occupiedHeld, motionEnableFB, motionDisableFB, occupiedP, vacantP;

INTEGER_PARAMETER timeoutType;

INTEGER occSave, vacSave, pulseTime;
LONG_INTEGER trueTimeout;




PUSH motionEnable
{

 	motionEnableFB = 1; //enable sensor
	motionDisableFB = 0;


	if (occSave = 1)
	{
     	PULSE(pulseTime, occupiedP); 
	}

	else if (vacSave = 1)
	{
        PULSE(pulseTime, vacantP);
	}



}

PUSH motionDisable
{
    motionEnableFB = 0; //disable sensor
	motionDisableFB = 1;


}

                  

PUSH forceOccupancy
{
   CancelAllWait(); // cancel any running timers

	occupiedHeld = 1; //room is occupied
	occSave = 1;
	vacSave = 0;



}


PUSH forceVacancy
{
   CancelAllWait(); // cancel any running timers

	occupiedHeld = 0; //room is vacant
	occSave = 0;
	vacSave = 1;


}



      

PUSH sensorIn
{
    occupiedHeld = 1; //room is occupied
	occSave = 1;
	vacSave = 0;

 	CancelAllWait(); // cancel any running timers

    if (motionEnableFB = 1)
	{
     	PULSE (pulseTime, occupiedP);
	}
	


}


RELEASE sensorIn
{
 	WAIT(trueTimeout, vacWait)
	{
        occupiedHeld = 0; //room is now vacant
		occSave = 0;
		vacSave = 1;

    	if (motionEnableFB = 1)
		{
     		PULSE (pulseTime, vacantP);
		}
	}
}

CHANGE timeoutSeconds
{

	if (timeoutType = 0) //timeout is in seconds
	{
      trueTimeout = (timeoutSeconds * 100); //convert 1s to .01s
	}



}


CHANGE timeoutTenths
{

    if (timeoutType = 1) //timeout is in .1 seconds
	{
      trueTimeout = (timeoutTenths * 10); //convert .1s to .01s
	}



}




Function Main ()
{

	WaitForInitializationComplete();
    pulseTime = 25;

	if (timeoutType = 0) //timeout is in seconds
	{
      trueTimeout = timeoutSeconds *100; //convert 1s to .01s
	}

	else
	{
		trueTimeout = timeoutTenths * 10; //convert .1s to .01s
	}



}
